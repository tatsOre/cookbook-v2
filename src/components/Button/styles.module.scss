@use "sass:color";
@use '../../styles/globals.module.scss' as g;

$button-border-radius: 0px;

@mixin icon--button {
    min-height: 40px;
    min-width: 40px;
    display: grid;
    place-content: center;

    @media only screen and (min-width: g.$breakpoint-large) {
        width: 48px;
        height: 48px;
    }
}

/** Unstyled Buttons: **/
.button__base {
    --webkit-appearance: none;
    border-radius: 0;
    text-align: inherit;
    background: none;
    box-shadow: none;
    padding: 0;
    cursor: pointer;
    border: none;
    color: inherit;
    outline: none;

    &:disabled {
        cursor: not-allowed;
        opacity: 0.8;
    }
}

/** Styled Buttons with label: **/
.button {
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid transparent;
    border-radius: $button-border-radius;
    padding: 0.75rem 1rem;

    &--label {
        @include g.font--button;
    }

    &--compact {
        padding: 0.3rem 0.5rem;

        span.button--label {}
    }

    &--full {
        width: 100%;
    }

    span.icon__container {
        display: grid;
        place-content: center;

        &--left {
            margin-inline-end: 0.5rem;
        }

        &--right {
            margin-inline-start: 0.5rem;
        }
    }
}

/** Button Variants: */
// Todo: implement 'text' variant, 'success' appearance & mixin

.button {
    &--filled#{&}--primary {
        color: g.$color-white;
        background-color: g.$color-primary-base;
        border-color: g.$color-primary-base;

        @media (hover: hover) {
            &:hover:not([disabled]) {
                background-color: g.$color-primary-hover;
                border-color: g.$color-primary-hover;
            }
        }
    }

    &--outline#{&}--primary {
        color: g.$color-primary-hover;
        background-color: g.$color-white;
        border-color: g.$color-primary-hover;

        @media (hover: hover) {
            &:hover:not([disabled]) {
                background-color: g.$color-primary-shade;
            }
        }
    }

    &--light#{&}--primary {
        color: g.$color-primary-base;
        background-color: g.$color-primary-shade;
        border-color: g.$color-primary-shade;

        @media (hover: hover) {
            &:hover:not([disabled]) {
                background-color: color.scale(g.$color-primary-base, $lightness: 90%);
                border-color: color.scale(g.$color-primary-base, $lightness: 90%);
            }
        }
    }

    &--filled#{&}--secondary {
        color: g.$color-white;
        background-color: g.$color-rich-black;
        border-color: g.$color-rich-black;

        &:hover:not([disabled]) {
            background-color: g.$color-smoke-gray;
            border-color: g.$color-smoke-gray;
        }
    }

    &--outline#{&}--secondary {
        color: g.$color-rich-black;
        background-color: g.$color-white;
        border-color: g.$color-rich-black;

        @media (hover: hover) {
            &:hover:not([disabled]) {
                background-color: g.$color-cool-grey-100;
            }
        }
    }

    &--light#{&}--secondary {
        color: g.$color-rich-black;
        background-color: g.$color-cool-grey-100;
        border-color: g.$color-cool-grey-100;

        @media (hover: hover) {
            &:hover:not([disabled]) {
                background-color: color.scale(g.$color-rich-black, $lightness: 90%);
                border-color: color.scale(g.$color-rich-black, $lightness: 90%);
            }
        }
    }

    &--filled#{&}--danger {
        color: g.$color-white;
        background-color: g.$color-danger-base;
        border-color: g.$color-danger-base;

        @media (hover: hover) {
            &:hover:not([disabled]) {
                background-color: g.$color-danger-hover;
                border-color: g.$color-danger-hover;
            }
        }
    }

    &--outline#{&}--danger {
        color: g.$color-danger-base;
        background-color: g.$color-white;
        border-color: g.$color-danger-base;

        @media (hover: hover) {
            &:hover:not([disabled]) {
                background-color: g.$color-danger-shade;
            }
        }
    }

    &--light#{&}--danger {
        color: g.$color-danger-base;
        background-color: g.$color-danger-shade;
        border-color: g.$color-danger-shade;

        @media (hover: hover) {
            &:hover:not([disabled]) {
                background-color: color.scale(g.$color-danger-base, $lightness: 90%);
                border-color: color.scale(g.$color-danger-base, $lightness: 90%);
            }
        }
    }
}
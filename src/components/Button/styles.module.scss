@use '../../styles/globals.module.scss' as g;

@mixin size($size) {
    height: $size;
    width: $size;
    min-height: $size;
    min-width: $size;
}

@mixin icon--button {
    @include size($size: 40px);
    text-align: center;

    @media only screen and (min-width: g.$breakpoint-medium) {
        @include size($size: 50px);
    }
}

/** Unstyled Buttons: **/
.button__base {
    --webkit-appearance: none;
    border-radius: 0;
    text-align: inherit;
    background: none;
    box-shadow: none;
    padding: 0;
    cursor: pointer;
    border: none;
    color: inherit;
    outline: none;

    &:disabled {
        cursor: not-allowed;
        opacity: 0.8;
    }
}

/** Styled Buttons with label: **/
.button {
    border-radius: g.$border-radius-default;
    background-color: g.$color-white;
    border: g.$border-default;
    transition: all 0.15s ease-out 0s;
    @include g.font--button;

    &--compact {
        padding: 0.3rem 0.5rem;
    }

    &--wide {
        padding: 0.75rem 1rem;
    }

    span.icon__container {
        vertical-align: sub;

        &--left {
            margin-inline-end: 0.5rem;
        }

        &--right {
            margin-inline-start: 0.5rem;
        }
    }

    &--danger {
        background-color: g.$color-danger-base;
    }

    @media (hover: hover) {
        &:hover:not([disabled]):not([aria-disabled="true"]) {
            transform: translate(-0.25rem, -0.25rem);
            box-shadow: 0.25rem 0.25rem 0 g.$color-rich-black;
        }
    }
}

/** Buttons without label: **/
.action--button {
    @include icon--button;
}

/* Home Mobile Nav Button */
.menu--button {
    position: relative;
    background-color: transparent !important;

    div {
        position: relative;
        z-index: 0;
        transition: all 0ms 300ms;

        &::before {
            content: '';
            position: absolute;
            z-index: 1;
            left: 0;
            bottom: 6px;
            transition: bottom 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1),
                transform 300ms cubic-bezier(0.23, 1, 0.32, 1);
        }

        &::after {
            content: '';
            position: absolute;
            z-index: 1;
            left: 0;
            top: 6px;
            transition: top 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1),
                transform 300ms cubic-bezier(0.23, 1, 0.32, 1);
        }

        &,
        &::before,
        &::after {
            width: 20px;
            height: 2.5px;
            background-color: g.$color-rich-black;
            border-radius: g.$border-radius-default;
        }

        &.animate {
            background: rgb(232, 89, 146, 0);
        }

        &.animate:before {
            bottom: 0;
            transform: rotate(-45deg);
            transition: bottom 300ms cubic-bezier(0.23, 1, 0.32, 1),
                transform 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1);
        }

        &.animate:after {
            top: 0;
            transform: rotate(45deg);
            transition: top 300ms cubic-bezier(0.23, 1, 0.32, 1),
                transform 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1);
        }
    }
}
/** COLOR **/
@use "sass:color";

/** Cuando decida que hacer, puede usar variables para no tipear strings, ex: 
    se usa: themed($variable) como una global
*/
$background--color: 'backgroundColor';

/*
 * Theme definitions
 */

$themes: (
    default: (
        backgroundColor: blue,
        textColor: #408bbd,
        buttonTextColor: #408bbd,
        buttonTextTransform: none,
        buttonTextHoverColor: #61b0e7,
        buttonColor: #fff,
        buttonBorder: 2px solid #408bbd,
    ),
    dark: (
        backgroundColor: #222,
        textColor: #ddd,
        buttonTextColor: #aaa,
        buttonTextTransform: uppercase,
        buttonTextHoverColor: #ddd,
        buttonColor: #333,
        buttonBorder: 1px solid #333,
    ),
);

/*
 * Implementation of themes
 */

@mixin themify() {
    @each $theme, $map in $themes {
        :global(.theme--#{$theme}) & {
            $theme-map: () !global;

            @each $key, $submap in $map {
                $value: map-get(map-get($themes, $theme), '#{$key}');
                $theme-map: map-merge($theme-map, ($key: $value)) !global;
        }

        @content;

        $theme-map: null !global;
    }
}
}

@function themed($key) {
    @return map-get($theme-map, $key);
};
